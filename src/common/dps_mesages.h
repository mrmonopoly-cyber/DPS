/* CAN message encoder/decoder: automatically generated - do not edit.

This file was generated by dbcc: See <https://github.com/howerj/dbcc>

Consider donating; see the repo for more information, this project 
requires your support to continue.

For those with paid support or to inquire about paid support
please Email <mailto:hello.operator.co.uk@gmail.com>.

*/

#ifndef DPS_MESAGES_H
#define DPS_MESAGES_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_DOUBLE_TYPE
#define DBCC_DOUBLE_TYPE
typedef double dbcc_double_t;
#endif

#ifndef DBCC_FLOAT_TYPE
#define DBCC_FLOAT_TYPE
typedef float dbcc_float_t;
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_DPSSLAVEMEX (650) /* 0x28a */
#define CAN_ID_DPSMASTERMEX (651) /* 0x28b */

typedef PREPACK struct {
	uint64_t board_name; /* scaling 1.0, offset 0.0, units slave board name */
	uint64_t var_name; /* scaling 1.0, offset 0.0, units slave var name */
	uint32_t value; /* scaling 1.0, offset 0.0, units slave var value */
	uint8_t board_id; /* scaling 1.0, offset 0.0, units slave board id */
	uint8_t Mode; /* scaling 1.0, offset 0.0, units slave mex type */
	uint8_t id; /* scaling 1.0, offset 0.0, units slave board id */
	uint8_t info_var_id; /* scaling 1.0, offset 0.0, units slave var id */
	uint8_t value_var_id; /* scaling 1.0, offset 0.0, units slave var id */
	uint8_t var_id; /* scaling 1.0, offset 0.0, units slave var id */
	uint8_t type; /* scaling 1.0, offset 0.0, units slave var type */
	uint8_t size; /* scaling 1.0, offset 0.0, units slave var size */
} POSTPACK can_0x28a_DpsSlaveMex_t;

typedef PREPACK struct {
	uint32_t value; /* scaling 1.0, offset 0.0, units slave var value */
	uint8_t Mode; /* scaling 1.0, offset 0.0, units slave mex type */
	uint8_t var_name_board_id; /* scaling 1.0, offset 0.0, units slave board id */
	uint8_t var_refresh_board_id; /* scaling 1.0, offset 0.0, units slave board id */
	uint8_t var_value_board_id; /* scaling 1.0, offset 0.0, units slave board id */
	uint8_t var_refresh_var_id; /* scaling 1.0, offset 0.0, units slave var id */
	uint8_t var_value_var_id; /* scaling 1.0, offset 0.0, units slave var id */
	uint8_t reserved; /* scaling 1.0, offset 0.0, units none */
} POSTPACK can_0x28b_DpsMasterMex_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x28a_DpsSlaveMex_time_stamp_rx;
	dbcc_time_stamp_t can_0x28b_DpsMasterMex_time_stamp_rx;
	unsigned can_0x28a_DpsSlaveMex_status : 2;
	unsigned can_0x28a_DpsSlaveMex_tx : 1;
	unsigned can_0x28a_DpsSlaveMex_rx : 1;
	unsigned can_0x28b_DpsMasterMex_status : 2;
	unsigned can_0x28b_DpsMasterMex_tx : 1;
	unsigned can_0x28b_DpsMasterMex_rx : 1;
	can_0x28a_DpsSlaveMex_t can_0x28a_DpsSlaveMex;
	can_0x28b_DpsMasterMex_t can_0x28b_DpsMasterMex;
} POSTPACK can_obj_dps_mesages_h_t;

int unpack_message(can_obj_dps_mesages_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message(can_obj_dps_mesages_h_t *o, const unsigned long id, uint64_t *data);
int message_dlc(const unsigned long id);
int print_message(const can_obj_dps_mesages_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x28a_board_name(const can_obj_dps_mesages_h_t *o, uint64_t *out);
int encode_can_0x28a_board_name(can_obj_dps_mesages_h_t *o, uint64_t in);
int decode_can_0x28a_var_name(const can_obj_dps_mesages_h_t *o, uint64_t *out);
int encode_can_0x28a_var_name(can_obj_dps_mesages_h_t *o, uint64_t in);
int decode_can_0x28a_value(const can_obj_dps_mesages_h_t *o, uint32_t *out);
int encode_can_0x28a_value(can_obj_dps_mesages_h_t *o, uint32_t in);
int decode_can_0x28a_board_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_board_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_Mode(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_Mode(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_info_var_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_info_var_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_value_var_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_value_var_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_var_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_var_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_type(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_type(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28a_size(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28a_size(can_obj_dps_mesages_h_t *o, uint8_t in);


int decode_can_0x28b_value(const can_obj_dps_mesages_h_t *o, uint32_t *out);
int encode_can_0x28b_value(can_obj_dps_mesages_h_t *o, uint32_t in);
int decode_can_0x28b_Mode(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_Mode(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28b_var_name_board_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_var_name_board_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28b_var_refresh_board_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_var_refresh_board_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28b_var_value_board_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_var_value_board_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28b_var_refresh_var_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_var_refresh_var_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28b_var_value_var_id(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_var_value_var_id(can_obj_dps_mesages_h_t *o, uint8_t in);
int decode_can_0x28b_reserved(const can_obj_dps_mesages_h_t *o, uint8_t *out);
int encode_can_0x28b_reserved(can_obj_dps_mesages_h_t *o, uint8_t in);


#ifdef __cplusplus
} 
#endif

#endif
